#!/usr/bin/env python

import smtplib
import mimetypes
from email.message import EmailMessage

# This program combines two online sources of information: 

# This good description of how to send emails with attachments via gmail:
# https://levelup.gitconnected.com/send-email-using-python-30fc1f203505

# And a comment here about turning on 2-factor security and using 
# app passwords, which is required more recently: 
# https://bit.ly/3W0PQ3h


sender = "cmeafestivalcoordinator@gmail.com"
recipient = "shelley.durbin@gmail.com"

server = smtplib.SMTP('smtp.gmail.com',587) #port 465 or 587
# server.ehlo()
server.starttls()
# server.ehlo()

# Security Alert:  This is just to keep the password out of github, it's 
# not really secure.  Easy enough to add interactive password generation
# but for my purposes being in a file on my machine is secure enough. 
with open('password.txt', 'r') as file:
    app_password = file.read()
server.login(sender,app_password)

msg = EmailMessage()
msg['From'] = sender
msg['To'] = recipient
msg['Subject'] = 'Learning to send email attachments!'

body = """Hello
Well, I've gone and done it.  I've learned how to send emails with 
attachments from Python, even with Google's hightened security measures. 

I've also learned how to make PDFs programatically.  The attached invoice was
generated by a small Python program.   

So that's all the tech I needed to master to automate this thing.  It'll 
take me an hour or two to glue it all together into a solution.   I think 
I'll have one program that will generate invoice PDFs from the spreadsheet. 
All the PDFs will be in a folder so that if you want you can inspect them 
before sending them out.  If there is a problem with one you can just drag 
it out of the folder.  Then I'll have another program you can run when 
you are ready which bulk sends all of the PDFs that are left in the folder.   
Easy peasy!  

I've set up the cmeafestivalcoordinator gmail account.  So that's the account
everyone will get invoices from.   If they reply to the email the reply will go 
there, which should make it easier to respond to questions and keep this business
siloed away from everyone's regular email.   When you get home I'll whisper 
the easily remembered password in your ears. 
"""
msg.set_content(body)

attachFile ="invoice.pdf" 
mime_type,mime_subtype = mimetypes.guess_type(attachFile)[0].split("/")
with open(attachFile, 'rb') as file:
    msg.add_attachment(file.read(),
    maintype=mime_type,
    subtype=mime_subtype,
    filename=attachFile)


# You should use msg.as_string() if you call smtplib.SMTP.sendmail()
server.sendmail(sender,recipient,msg.as_string())
server.close()